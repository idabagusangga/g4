{"ast":null,"code":"var _jsxFileName = \"/Users/angga/Documents/gaspack/src/Components/Card/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Text } from '..';\nimport { Colors } from '../../Constants';\nimport StyledDiv from './styled';\n/**\n * Card component for the mangalist\n * @param {Object} props property object for card function\n * @property {String} background image url for the manga\n * @returns JSC component for card component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  _s();\n\n  const [state, setState] = useState({\n    isHover: false\n  });\n  /**\n   * function that opens a link in new tab\n   * @param {String} url url link to open\n   */\n\n  const openInNewTab = url => {\n    const newWindow = window.open(`https://www.imdb.com/title/${url}`, '_blank', 'noopener,noreferrer');\n    if (newWindow) newWindow.opener = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    background: props.background,\n    isHover: state.isHover,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card${props.large ? '-large' : ''} flex-col`,\n      onMouseEnter: () => setState(state => ({ ...state,\n        isHover: true\n      })),\n      onMouseLeave: () => setState(state => ({ ...state,\n        isHover: false\n      })) // onClick = {() => openInNewTab(props.siteUrl)}\n      ,\n      children: [props.large ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close flex-row width100\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          content: \"x\",\n          style: \"body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-tab flex-col width100\",\n        onClick: () => props.showDetail(),\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          content: props.title,\n          style: \"body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-row flex-col jcai\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => openInNewTab(props.siteUrl),\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              content: \"Detail\",\n              style: \"body\",\n              color: Colors.black.primary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"0g6fco+Ii7TezWRTKpvE1RC0PsU=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","Text","Colors","StyledDiv","Card","props","state","setState","isHover","openInNewTab","url","newWindow","window","open","opener","background","large","showDetail","title","siteUrl","black","primary"],"sources":["/Users/angga/Documents/gaspack/src/Components/Card/index.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { Text } from '..'\nimport { Colors } from '../../Constants'\nimport StyledDiv from './styled'\n\n/**\n * Card component for the mangalist\n * @param {Object} props property object for card function\n * @property {String} background image url for the manga\n * @returns JSC component for card component\n */\nexport default function Card(props) {\n    const [state, setState] = useState({\n        isHover: false,\n    })\n\n    /**\n     * function that opens a link in new tab\n     * @param {String} url url link to open\n     */\n     const openInNewTab = (url) => {\n        const newWindow = window.open(`https://www.imdb.com/title/${url}`, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    return (\n        <StyledDiv\n            background = {props.background}\n            isHover = {state.isHover}\n        >\n\n            <div \n                className = {`card${props.large ? '-large' : ''} flex-col`}\n                onMouseEnter = {() => setState(state => ({...state,\n                isHover: true}))}\n                onMouseLeave = {() => setState(state => ({\n                    ...state,\n                    isHover: false,\n                }))}\n                // onClick = {() => openInNewTab(props.siteUrl)}\n            >\n                {\n                    props.large ? \n\n                    <div className = 'close flex-row width100'>\n\n                        <Text content = 'x' style = 'body'/>\n\n                    </div> : null\n                }\n                <div className = 'info-tab flex-col width100' onClick = {() => props.showDetail()}>\n\n                    <Text content = {props.title} style = 'body'/>\n                    <div className = 'info-row flex-col jcai'>\n                        <div className='button' onClick = {() => openInNewTab(props.siteUrl)}>\n\n                            <Text content = 'Detail' style = 'body' color = {Colors.black.primary}/>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </StyledDiv>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAChC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;IAC/BQ,OAAO,EAAE;EADsB,CAAD,CAAlC;EAIA;AACJ;AACA;AACA;;EACK,MAAMC,YAAY,GAAIC,GAAD,IAAS;IAC3B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAa,8BAA6BH,GAAI,EAA9C,EAAiD,QAAjD,EAA2D,qBAA3D,CAAlB;IACA,IAAIC,SAAJ,EAAeA,SAAS,CAACG,MAAV,GAAmB,IAAnB;EAClB,CAHA;;EAKD,oBACI,QAAC,SAAD;IACI,UAAU,EAAIT,KAAK,CAACU,UADxB;IAEI,OAAO,EAAIT,KAAK,CAACE,OAFrB;IAAA,uBAKI;MACI,SAAS,EAAK,OAAMH,KAAK,CAACW,KAAN,GAAc,QAAd,GAAyB,EAAG,WADpD;MAEI,YAAY,EAAI,MAAMT,QAAQ,CAACD,KAAK,KAAK,EAAC,GAAGA,KAAJ;QACzCE,OAAO,EAAE;MADgC,CAAL,CAAN,CAFlC;MAII,YAAY,EAAI,MAAMD,QAAQ,CAACD,KAAK,KAAK,EACrC,GAAGA,KADkC;QAErCE,OAAO,EAAE;MAF4B,CAAL,CAAN,CAJlC,CAQI;MARJ;MAAA,WAWQH,KAAK,CAACW,KAAN,gBAEA;QAAK,SAAS,EAAG,yBAAjB;QAAA,uBAEI,QAAC,IAAD;UAAM,OAAO,EAAG,GAAhB;UAAoB,KAAK,EAAG;QAA5B;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QAFA,GAMS,IAjBjB,eAmBI;QAAK,SAAS,EAAG,4BAAjB;QAA8C,OAAO,EAAI,MAAMX,KAAK,CAACY,UAAN,EAA/D;QAAA,wBAEI,QAAC,IAAD;UAAM,OAAO,EAAIZ,KAAK,CAACa,KAAvB;UAA8B,KAAK,EAAG;QAAtC;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAK,SAAS,EAAG,wBAAjB;UAAA,uBACI;YAAK,SAAS,EAAC,QAAf;YAAwB,OAAO,EAAI,MAAMT,YAAY,CAACJ,KAAK,CAACc,OAAP,CAArD;YAAA,uBAEI,QAAC,IAAD;cAAM,OAAO,EAAG,QAAhB;cAAyB,KAAK,EAAG,MAAjC;cAAwC,KAAK,EAAIjB,MAAM,CAACkB,KAAP,CAAaC;YAA9D;cAAA;cAAA;cAAA;YAAA;UAFJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EALJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAyCH;;GAvDuBjB,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}